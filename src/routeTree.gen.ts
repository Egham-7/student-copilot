/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as NotesImport } from './routes/_notes'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as NotesCreateIndexImport } from './routes/_notes/create/index'
import { Route as NotesNoteIdIndexImport } from './routes/_notes/$noteId/index'
import { Route as AuthSignupIndexImport } from './routes/_auth/signup/index'
import { Route as AuthLoginIndexImport } from './routes/_auth/login/index'

// Create/Update Routes

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const NotesRoute = NotesImport.update({
  id: '/_notes',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NotesCreateIndexRoute = NotesCreateIndexImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => NotesRoute,
} as any)

const NotesNoteIdIndexRoute = NotesNoteIdIndexImport.update({
  id: '/$noteId/',
  path: '/$noteId/',
  getParentRoute: () => NotesRoute,
} as any)

const AuthSignupIndexRoute = AuthSignupIndexImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_notes': {
      id: '/_notes'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NotesImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup/': {
      id: '/_auth/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupIndexImport
      parentRoute: typeof AuthImport
    }
    '/_notes/$noteId/': {
      id: '/_notes/$noteId/'
      path: '/$noteId'
      fullPath: '/$noteId'
      preLoaderRoute: typeof NotesNoteIdIndexImport
      parentRoute: typeof NotesImport
    }
    '/_notes/create/': {
      id: '/_notes/create/'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof NotesCreateIndexImport
      parentRoute: typeof NotesImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthSignupIndexRoute: typeof AuthSignupIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthSignupIndexRoute: AuthSignupIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface NotesRouteChildren {
  NotesNoteIdIndexRoute: typeof NotesNoteIdIndexRoute
  NotesCreateIndexRoute: typeof NotesCreateIndexRoute
}

const NotesRouteChildren: NotesRouteChildren = {
  NotesNoteIdIndexRoute: NotesNoteIdIndexRoute,
  NotesCreateIndexRoute: NotesCreateIndexRoute,
}

const NotesRouteWithChildren = NotesRoute._addFileChildren(NotesRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof NotesRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof AuthLoginIndexRoute
  '/signup': typeof AuthSignupIndexRoute
  '/$noteId': typeof NotesNoteIdIndexRoute
  '/create': typeof NotesCreateIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof NotesRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof AuthLoginIndexRoute
  '/signup': typeof AuthSignupIndexRoute
  '/$noteId': typeof NotesNoteIdIndexRoute
  '/create': typeof NotesCreateIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_notes': typeof NotesRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
  '/_auth/signup/': typeof AuthSignupIndexRoute
  '/_notes/$noteId/': typeof NotesNoteIdIndexRoute
  '/_notes/create/': typeof NotesCreateIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/$noteId'
    | '/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/$noteId'
    | '/create'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_notes'
    | '/forgot-password'
    | '/_auth/login/'
    | '/_auth/signup/'
    | '/_notes/$noteId/'
    | '/_notes/create/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  NotesRoute: typeof NotesRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  NotesRoute: NotesRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_notes",
        "/forgot-password"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login/",
        "/_auth/signup/"
      ]
    },
    "/_notes": {
      "filePath": "_notes.tsx",
      "children": [
        "/_notes/$noteId/",
        "/_notes/create/"
      ]
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/_auth/login/": {
      "filePath": "_auth/login/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup/": {
      "filePath": "_auth/signup/index.tsx",
      "parent": "/_auth"
    },
    "/_notes/$noteId/": {
      "filePath": "_notes/$noteId/index.tsx",
      "parent": "/_notes"
    },
    "/_notes/create/": {
      "filePath": "_notes/create/index.tsx",
      "parent": "/_notes"
    }
  }
}
ROUTE_MANIFEST_END */
